variables:
  DOCKER_REGISTRY: "${CI_REGISTRY}"
  DOCKER_IMAGE_BACKEND: "${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHA}"

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - BackEnd/SmartLocker/.m2/repository/
    - BackEnd/SmartLocker/target/

build:
  stage: build
  image: maven:3.8.4-openjdk-17
  script:
    - cd BackEnd/SmartLocker
    - mvn package -DskipTests
  artifacts:
    paths:
      - BackEnd/SmartLocker/target/*.jar
  only:
    - merge_requests
    - main

test:
  stage: test
  image: maven:3.8.4-openjdk-17
  script:
    - cd BackEnd/SmartLocker
    - mvn test
  only:
    - merge_requests
    - main

deploy:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - cd BackEnd/Docker
    - docker build -t $DOCKER_IMAGE_BACKEND .
    - docker push $DOCKER_IMAGE_BACKEND
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "
        cd /home/ubuntu/BackEnd/Docker &&
        echo 'DB_HOST=${DB_HOST}' > .env &&
        echo 'DB_PORT=${DB_PORT}' >> .env &&
        echo 'DB_NAME=${DB_NAME}' >> .env &&
        echo 'DB_USER=${DB_USER}' >> .env &&
        echo 'DB_PASSWORD=${DB_PASSWORD}' >> .env &&
        docker-compose down &&
        docker system prune -af &&
        docker-compose up -d"
  only:
    - main
